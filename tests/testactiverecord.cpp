#include "testactiverecord.h"

void TestActiveRecord::initTestCase()
{
    m_db = QSqlDatabase::database();

    QStringList sql;
    sql << "CREATE TABLE test_activerecord ("
        << "id INTEGER NOT NULL,"
        << "str_field VARCHAR(255) NOT NULL,"
        << "date_field DATE NOT NULL,"
        << "float_field FLOAT,"
        << "PRIMARY KEY (id));";
    m_db.exec(sql.join(' '));
}

void TestActiveRecord::cleanupTestCase()
{
}

void TestActiveRecord::save_data()
{
    QTest::addColumn<QVariant>("f1");
    QTest::addColumn<QVariant>("f2");
    QTest::addColumn<QVariant>("f3");
    QTest::addColumn<QVariant>("f4");
    QTest::addColumn<bool>("result");

    QTest::newRow("ALL")                         << QVariant()
                                                 << QVariant("test-all")
                                                 << QVariant(QDate::currentDate())
                                                 << QVariant(0.1234)
                                                 << true;

    QTest::newRow("ALL (update)")             << QVariant(1)
                                                 << QVariant("test-all-again")
                                                 << QVariant(QDate::currentDate())
                                                 << QVariant(0.1234)
                                                 << true;

    QTest::newRow("ALL (without autogenerated)") << QVariant()
                                                 << QVariant("test-no-ag")
                                                 << QVariant(QDate::currentDate())
                                                 << QVariant(0.1234)
                                                 << true;

    QTest::newRow("REQUIRED")                    << QVariant()
                                                 << QVariant("test-req-only")
                                                 << QVariant(QDate::currentDate())
                                                 << QVariant()
                                                 << true;

    QTest::newRow("WITHOUT REQUIRED")            << QVariant()
                                                 << QVariant()
                                                 << QVariant()
                                                 << QVariant()
                                                 << false;
}

void TestActiveRecord::save()
{
    QFETCH(QVariant, f1);
    QFETCH(QVariant, f2);
    QFETCH(QVariant, f3);
    QFETCH(QVariant, f4);
    QFETCH(bool, result);

    orm::ActiveRecord rec("test_activerecord");
    if (f1.isValid()) {
        if (!rec.load(f1)) {
            qDebug() << rec.lastError();
        }
    }
    rec.setValue("str_field", f2);
    rec.setValue("date_field", f3);
    rec.setValue("float_field", f4);

    bool ok = rec.save();
    if (!ok) {
        qDebug() << rec.lastError();
    }

    QCOMPARE(ok, result);
    QCOMPARE(rec.value("str_field"), f2);
    QCOMPARE(rec.value("date_field"), f3);
    QCOMPARE(rec.value("float_field"), f4);
}
